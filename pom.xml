<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>agile</artifactId>
    <packaging>jar</packaging>
    <version>1.0.5.4</version>
    <name>AgileFramework</name>
    <description>Agile API平台</description>
    <url>http://10.10.10.9:8081/nexus/content/repositories/agile/</url>

    <!--资源库-->
    <repositories>
        <repository>
            <id>privateMaven</id>
            <url>http://10.10.10.9:8081/nexus/content/groups/public/</url>
        </repository>
    </repositories>

    <parent>
        <groupId>com.agileframework</groupId>
        <artifactId>agile-boot-parent</artifactId>
        <version>LATEST</version>
    </parent>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
<!--        &lt;!&ndash; 共同组件 &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>com.idss.logaudit</groupId>-->
<!--            <artifactId>argus-common</artifactId>-->
<!--            <version>LATEST</version>-->
<!--        </dependency>-->

<!--        &lt;!&ndash; 全文检索 &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>com.idss.logaudit</groupId>-->
<!--            <artifactId>argus-service-full-retrieval</artifactId>-->
<!--            <version>LATEST</version>-->
<!--        </dependency>-->


<!--        &lt;!&ndash; 健康监控相关 &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>com.idss.logaudit</groupId>-->
<!--            <artifactId>argus-service-monitor</artifactId>-->
<!--            <version>LATEST</version>-->
<!--        </dependency>-->

<!--        &lt;!&ndash; 自定义仪表盘 &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>com.idss.logaudit</groupId>-->
<!--            <artifactId>argus-service-dashboard</artifactId>-->
<!--            <version>LATEST</version>-->
<!--        </dependency>-->

<!--        &lt;!&ndash;系统管理&ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>com.idss.logaudit</groupId>-->
<!--            <artifactId>argus-service-system</artifactId>-->
<!--            <version>LATEST</version>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>com.idss.logaudit</groupId>-->
<!--            <artifactId>argus-service-system-setting</artifactId>-->
<!--            <version>LATEST</version>-->
<!--        </dependency>-->

<!--        &lt;!&ndash;资产&ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>com.idss.logaudit</groupId>-->
<!--            <artifactId>argus-service-asset</artifactId>-->
<!--            <version>LATEST</version>-->
<!--        </dependency>-->

<!--        &lt;!&ndash;直接使用国信版本&ndash;&gt;-->

<!--        &lt;!&ndash; pipeline &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>com.idss.agile</groupId>-->
<!--            <artifactId>argus-service-pipeline</artifactId>-->
<!--            <version>LATEST</version>-->
<!--        </dependency>-->

<!--        &lt;!&ndash; 事件相关 &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>com.idss.logaudit</groupId>-->
<!--            <artifactId>argus-service-eventretrieval</artifactId>-->
<!--            <version>LATEST</version>-->
<!--        </dependency>-->

<!--        &lt;!&ndash;soc&ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>com.idss.agile</groupId>-->
<!--            <artifactId>argus-service-soc</artifactId>-->
<!--            <version>LATEST</version>-->
<!--        </dependency>-->

<!--        &lt;!&ndash;ueba&ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>com.idss.agile</groupId>-->
<!--            <artifactId>argus-service-ueba</artifactId>-->
<!--            <version>LATEST</version>-->
<!--        </dependency>-->

<!--        &lt;!&ndash;报表管理&ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>com.idss.agile</groupId>-->
<!--            <artifactId>argus-service-report</artifactId>-->
<!--            <version>LATEST</version>-->
<!--        </dependency>-->


<!--        &lt;!&ndash;配置管理 邮箱 接口等设置&ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>com.idss.agile</groupId>-->
<!--            <artifactId>argus-service-settings</artifactId>-->
<!--            <version>LATEST</version>-->
<!--        </dependency>-->
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution> <!-- 绑定pmd:pmd到validate生命周期，在validate时会自动进行代码规范检查 -->
                        <id>validate</id>
                        <phase>validate</phase>
                        <configuration> <!-- 配置文件的路径，在style文件夹下 -->
                            <configLocation>
                                http://localhost:8081/repository/maven-releases/com/agileframework/checkstyle/1.0/checkstyle-1.0.xm;
                            </configLocation>
                            <encoding>UTF-8</encoding>
                            <consoleOutput>true</consoleOutput>
                            <failsOnError>true</failsOnError>
                            <includeTestSourceDirectory>false</includeTestSourceDirectory>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <includes>
                        <include>com/agile/</include>
                        <include>META-INF/*</include>
                    </includes>
                    <excludes>
                        <exclude>com/agile/App.class</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>default-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--<plugin>-->
            <!--<groupId>org.apache.maven.plugins</groupId>-->
            <!--<artifactId>maven-javadoc-plugin</artifactId>-->
            <!--<version>2.10.4</version>-->
            <!--<configuration>-->
            <!--<encoding>UTF-8</encoding>-->
            <!--<aggregate>true</aggregate>-->
            <!--<charset>UTF-8</charset>-->
            <!--<docencoding>UTF-8</docencoding>-->
            <!--</configuration>-->
            <!--<executions>-->
            <!--<execution>-->
            <!--<id>attach-javadocs</id>-->
            <!--<goals>-->
            <!--<goal>jar</goal>-->
            <!--</goals>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--</plugin>-->
            <plugin>
                <groupId>com.github.wvengen</groupId>
                <artifactId>proguard-maven-plugin</artifactId>
                <version>2.0.14</version>
                <executions>
                    <execution>
                        <!-- 混淆时刻，这里是打包的时候混淆-->
                        <phase>process-classes</phase>
                        <goals>
                            <!-- 使用插件的什么功能，当然是混淆-->
                            <goal>proguard</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- 是否将生成的PG文件安装部署-->
                    <attach>true</attach>
                    <!-- 是否混淆-->
                    <obfuscate>true</obfuscate>
                    <!-- 指定生成文件分类 -->
                    <attachArtifactClassifier>pg</attachArtifactClassifier>
                    <options>
                        <!-- JDK目标版本1.8-->
                        <option>-target 1.8</option>
                        <!-- 不做收缩（删除注释、未被引用代码）-->
                        <option>-dontshrink</option>
                        <!-- 不做优化（变更代码实现逻辑）-->
                        <option>-dontoptimize</option>
                        <!-- 不路过非公用类文件及成员-->
                        <option>-dontskipnonpubliclibraryclasses</option>
                        <option>-dontskipnonpubliclibraryclassmembers</option>
                        <!--不用大小写混合类名机制-->
                        <option>-dontusemixedcaseclassnames</option>

                        <!-- 优化时允许访问并修改有修饰符的类和类的成员 -->
                        <option>-allowaccessmodification</option>
                        <!-- 确定统一的混淆类的成员名称来增加混淆-->
                        <option>-useuniqueclassmembernames</option>
                        <!-- 不混淆所有包名-->
                        <!--<option>-keeppackagenames</option>-->

                        <!-- 需要保持的属性：异常，注解等-->
                        <option>-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LocalVariable*Table,*Annotation*,Synthetic,EnclosingMethod</option>
                        <!-- 不混淆所有的set/get方法->
                        <!-<option>-keepclassmembers public class * {void set*(***);*** get*();}</option>-->

                        <!-- 不混淆包下的所有类名，且类中的方法也不混淆-->
<!--                        <option>-keep class com.xxx.xxx.bboss.SystemConfig { <methods> }</option>-->
<!--                        <option>-keep class com.xxx.xxx.framework.** { *; }</option>-->
<!--                        <option>-keep class com.xxx.xxx.xxx.controller.** { <methods>; }</option>-->
<!--                        <option>-keep class com.xxx.xxx.xxx.dao.** { <methods>; }</option>-->
<!--                        <option>-keep class com.xxx.xxx.xxx.exception { <methods>; }</option>-->
<!--                        <option>-keep class com.xxx.xxx.xxx.model.** { <methods>; }</option>-->

                    </options>
                    <!--class 混淆后输出的jar包-->
                    <outjar>classes-autotest.jar</outjar>
                    <!-- 添加依赖，这里你可以按你的需要修改，这里测试只需要一个JRE的Runtime包就行了 -->
                    <libs>
                        <lib>${java.home}/lib/rt.jar</lib>
                    </libs>
                    <!-- 对什么东西进行加载，这里仅有classes成功，毕竟你也不可能对配置文件及JSP混淆吧-->
                    <injar>classes</injar>
                    <!-- 输出目录-->
                    <outputDirectory>${project.build.directory}</outputDirectory>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <reporting>
        <excludeDefaults>true</excludeDefaults>
        <outputDirectory>${basedir}/target/doc</outputDirectory>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.3</version>
            </plugin>
        </plugins>
    </reporting>
</project>
